/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forms;

import controller.Controller;
import java.awt.Component;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableCellRenderer;
import model.Korisnik;
import model.Predstava;

/**
 *
 * @author Ana
 */
public class MainForm extends javax.swing.JFrame {
    List<Predstava> repertoar=Controller.getInstance().vratiListuPredstava();
    Korisnik korisnik;
    /**
     * Creates new form MainForm
     */
    public MainForm(Korisnik k) {
        initComponents();
        jLabel2.setText(k.getIme());
        jLabel3.setText(k.getPrezime());
        TableModelRepertoar tmr=new TableModelRepertoar(repertoar);
        jTableRepertoar.setModel(tmr);
        jTableRepertoar.setVisible(false);
        jButtonObrisi.setVisible(false);
        jButtonAzuriraj.setVisible(false);
        
        korisnik=k;
        
        
        jTableRepertoar.getColumnModel().getColumn(2).setCellRenderer(new TableCellRenderer() {
            SimpleDateFormat formatter = new SimpleDateFormat("dd.MM.yyyy");

            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                JLabel label = new JLabel();
                if (value instanceof Date) {
                    label.setText(formatter.format(value));
                }
                label.setOpaque(true);
                if (isSelected) {
                    label.setBackground(table.getSelectionBackground());
                    label.setForeground(table.getSelectionForeground());
                } else {
                    label.setBackground(table.getBackground());
                    label.setForeground(table.getForeground());
                }
                return label;
            }
        });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableRepertoar = new javax.swing.JTable();
        jButtonObrisi = new javax.swing.JButton();
        jButtonAzuriraj = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemPrikazi = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Dobrodosli,");

        jTableRepertoar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableRepertoar);

        jButtonObrisi.setText("Obrisi");
        jButtonObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonObrisiActionPerformed(evt);
            }
        });

        jButtonAzuriraj.setText("Azuriraj");
        jButtonAzuriraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAzurirajActionPerformed(evt);
            }
        });

        jMenu1.setText("Repertoar");

        jMenuItemPrikazi.setText("Prikazi");
        jMenuItemPrikazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemPrikaziActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemPrikazi);

        jMenuItem1.setText("Dodaj novu predstavu");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
            .addGroup(layout.createSequentialGroup()
                .addGap(243, 243, 243)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonObrisi)
                        .addGap(83, 83, 83)
                        .addComponent(jButtonAzuriraj)
                        .addGap(150, 150, 150)))
                .addGap(0, 349, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(99, 99, 99)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAzuriraj)
                    .addComponent(jButtonObrisi))
                .addContainerGap(115, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemPrikaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemPrikaziActionPerformed
         jTableRepertoar.setVisible(true);
          jButtonObrisi.setVisible(true);
        jButtonAzuriraj.setVisible(true);

    }//GEN-LAST:event_jMenuItemPrikaziActionPerformed

    private void jButtonObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonObrisiActionPerformed
        
        int selektovano=jTableRepertoar.getSelectedRow();
        if(selektovano==-1){
            JOptionPane.showMessageDialog(this,"Morate da oznacite sta zelite da obrisete", "GRESKA", JOptionPane.ERROR_MESSAGE);
        }else{
            List<Predstava> lista=Controller.getInstance().vratiListuPredstava();
           
            for (Predstava predstava : lista) {
                System.out.println(predstava.getId());
            }
            Controller.getInstance().obrisiPredstavu(lista.get(selektovano));
            JOptionPane.showMessageDialog(this,"Uspesno obrisano", "Uspesno", JOptionPane.INFORMATION_MESSAGE);
            azurirajTabelu();
        }
            

        
        


    }//GEN-LAST:event_jButtonObrisiActionPerformed

    private void jButtonAzurirajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAzurirajActionPerformed
        List<Predstava> lista=Controller.getInstance().vratiListuPredstava();
          int selektovano=jTableRepertoar.getSelectedRow();
        if(selektovano==-1){
            JOptionPane.showMessageDialog(this,"Morate da oznacite sta zelite da azurirate", "GRESKA", JOptionPane.ERROR_MESSAGE);
        }else{
           Predstava p=lista.get(selektovano);
            System.out.println(p.getId());
           AddUpdateForm af=new AddUpdateForm(this, true, p, korisnik);
           af.setVisible(true);
           azurirajTabelu();

        }



        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonAzurirajActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
     
           
           AddUpdateForm af=new AddUpdateForm(this, true, null, korisnik);//korisnik treba koji je trenutni
           af.setVisible(true);
           azurirajTabelu();

    }//GEN-LAST:event_jMenuItem1ActionPerformed

 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAzuriraj;
    private javax.swing.JButton jButtonObrisi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItemPrikazi;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableRepertoar;
    // End of variables declaration//GEN-END:variables

    private void azurirajTabelu() {
        List<Predstava> repertoar2=Controller.getInstance().vratiListuPredstava();
        TableModelRepertoar tmr=new TableModelRepertoar(repertoar2);
        jTableRepertoar.setModel(tmr);
        
                  jTableRepertoar.getColumnModel().getColumn(2).setCellRenderer(new TableCellRenderer() {
            SimpleDateFormat formatter = new SimpleDateFormat("dd.MM.yyyy");

            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                JLabel label = new JLabel();
                if (value instanceof Date) {
                    label.setText(formatter.format(value));
                }
                label.setOpaque(true);
                if (isSelected) {
                    label.setBackground(table.getSelectionBackground());
                    label.setForeground(table.getSelectionForeground());
                } else {
                    label.setBackground(table.getBackground());
                    label.setForeground(table.getForeground());
                }
                return label;
            }
        });
        

    }
}
