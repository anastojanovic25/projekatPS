/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package forms;

import controller.Controller;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Locale;
import java.util.ResourceBundle;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.border.Border;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.BadLocationException;
import model.Korisnik;

/**
 *
 * @author Ana
 */
public class FormRegister1 extends javax.swing.JDialog {
    String emailKorisnika;
    private Locale currentLocale;
    private ResourceBundle messages;
    /**
     * Creates new form FormRegister1
     */
    public FormRegister1(FormRegister0 parent, boolean modal, String email,Locale currentLocale) {
        super(parent, modal);
        initComponents();
        addListeners1();
        this.currentLocale = currentLocale;
        
        loadLanguage();
        updateTexts();
        emailKorisnika=email;
        jLabelEmail.setText(email);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTxtRegSurname = new javax.swing.JTextField();
        jLabelSurname = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTxtRegNumber = new javax.swing.JTextField();
        jTxtRegName = new javax.swing.JTextField();
        jLabelName = new javax.swing.JLabel();
        jComboBoxGender = new javax.swing.JComboBox<>();
        jLabelpol = new javax.swing.JLabel();
        jTxtRegPassword = new javax.swing.JPasswordField();
        jTxtRegPassword1 = new javax.swing.JPasswordField();
        jLabelPassword = new javax.swing.JLabel();
        jCheckBoxCond = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        jLabelEmail = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI Emoji", 2, 14)); // NOI18N
        jLabel1.setText("Registracija");

        jButton1.setText("Zavrsi registraciju");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabelSurname.setText("Prezime:");

        jLabel4.setText("Broj telefona:");

        jLabelName.setText("Ime:");

        jComboBoxGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Muski", "Zenski" }));

        jLabelpol.setText("Pol:");

        jLabelPassword.setText("Nova lozinka:");

        jCheckBoxCond.setText("Prihvatam uslove koriscenja");

        jLabel5.setText("Ponovite lozinku:");

        jCheckBox1.setText("Prikazi lozinku");

        jCheckBox2.setText("Prikazi lozinku");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel5))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(69, 69, 69)
                                .addComponent(jLabelPassword)))
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelName, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelpol, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(153, 153, 153)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTxtRegNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jCheckBoxCond, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTxtRegPassword1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTxtRegPassword, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(55, 55, 55)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jCheckBox2)
                                        .addComponent(jCheckBox1)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jTxtRegName, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTxtRegSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 218, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(243, 243, 243)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabelEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelName)
                    .addComponent(jTxtRegName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelSurname)
                    .addComponent(jTxtRegSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTxtRegNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelpol))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTxtRegPassword1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPassword)
                    .addComponent(jCheckBox2))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTxtRegPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jCheckBox1))
                .addGap(39, 39, 39)
                .addComponent(jCheckBoxCond)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(48, 48, 48))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         String ime=jTxtRegName.getText();
        String prezime=jTxtRegSurname.getText();
        String broj=jTxtRegNumber.getText();
        
        String password=String.valueOf(jTxtRegPassword.getPassword());
        String passwordProvera=String.valueOf(jTxtRegPassword1.getPassword());
        String pol=(String) jComboBoxGender.getSelectedItem();
        ArrayList<JTextField> textFields = new ArrayList<>();
        if(!proveripolja()){
          
            textFields.add(jTxtRegName);
            textFields.add(jTxtRegSurname);
            textFields.add(jTxtRegNumber);
            
            textFields.add(jTxtRegPassword);
            textFields.add(jTxtRegPassword1);
            validiranje(textFields);
             switch (currentLocale.getLanguage()) {
                    case "srpski" ->
                        JOptionPane.showMessageDialog(this, "Morate popuniti sva polja", "GRESKA", JOptionPane.ERROR_MESSAGE);
                    case "engleski" ->
                       JOptionPane.showMessageDialog(this, "You must fill in all the fields", "ERROR", JOptionPane.ERROR_MESSAGE);
                    case "nemacki" ->
                        JOptionPane.showMessageDialog(this, "Sie müssen alle Felder ausfüllen", "FEHLER", JOptionPane.ERROR_MESSAGE);
                }
           
       }else if(!validacijaPodataka()){
             validiranje(textFields);
              switch (currentLocale.getLanguage()) {
                    case "srpski" ->
                         JOptionPane.showMessageDialog(this, "Niste popunili na odgovarajuci nacin ", "Greska", JOptionPane.ERROR_MESSAGE);

                    case "engleski" ->
                       JOptionPane.showMessageDialog(this, "You have not filled it out correctly", "ERROR", JOptionPane.ERROR_MESSAGE);
                    case "nemacki" ->
                        JOptionPane.showMessageDialog(this, "Sie haben es nicht korrekt ausgefüllt", "FEHLER", JOptionPane.ERROR_MESSAGE);
                }
            
       }else if(!password.equals(passwordProvera)){
            switch (currentLocale.getLanguage()) {
                    case "srpski" ->
                         JOptionPane.showMessageDialog(this, "Nisu Vam jednake sifre", "Greska", JOptionPane.ERROR_MESSAGE);

                    case "engleski" ->
                       JOptionPane.showMessageDialog(this, "The passwords do not match", "ERROR", JOptionPane.ERROR_MESSAGE);
                    case "nemacki" ->
                        JOptionPane.showMessageDialog(this, "Die Passwörter stimmen nicht überein", "FEHLER", JOptionPane.ERROR_MESSAGE);
                }
            
       }
        
       
        else{
            validiranje(textFields);
            if(jCheckBoxCond.isSelected()==false){
                switch (currentLocale.getLanguage()) {
                    case "srpski" ->
                          JOptionPane.showMessageDialog(this, "Niste prihvatili uslove koriscenja", "Greska", JOptionPane.ERROR_MESSAGE);

                    case "engleski" ->
                       JOptionPane.showMessageDialog(this, "You have not accepted the terms of use", "ERROR", JOptionPane.ERROR_MESSAGE);
                    case "nemacki" ->
                        JOptionPane.showMessageDialog(this, "Sie haben die Nutzungsbedingungen nicht akzeptiert", "FEHLER", JOptionPane.ERROR_MESSAGE);
                }
               
            }else{
                int odgovor;
            if(currentLocale.getLanguage()=="srpski"){
                odgovor= JOptionPane.showConfirmDialog(this, "Da li ste sigurni da su podaci tacni?", "Registracija pri kraju", JOptionPane.YES_NO_OPTION);
                switch (odgovor) {
                    case JOptionPane.YES_OPTION:
                         JOptionPane.showMessageDialog(this, "Uspesno registrovani!");
                     Korisnik k=new Korisnik(5656, emailKorisnika, password, ime, prezime, broj, pol);
                     Controller.getInstance().ubaciKorisnika(k);
                    this.dispose();
                        break;
                    case JOptionPane.NO_OPTION:
                        break;
                }
                    
            }else if(currentLocale.getLanguage()=="engleski"){
                odgovor=JOptionPane.showConfirmDialog(this, "Are you sure?","Confirmation",JOptionPane.YES_NO_OPTION);
                switch (odgovor) {
                    case JOptionPane.YES_OPTION:
                        JOptionPane.showMessageDialog(this, "Successfully", "Successfully", JOptionPane.ERROR_MESSAGE);
                        Korisnik k=new Korisnik(5656, emailKorisnika, password, ime, prezime, broj, pol);
                     Controller.getInstance().ubaciKorisnika(k);
                    this.dispose();
                        break;
                    case JOptionPane.NO_OPTION:
                        break;
                }
            }else if(currentLocale.getLanguage()=="nemacki"){
                odgovor=JOptionPane.showConfirmDialog(this, "Sind Sie sicher?","Bestätigung",JOptionPane.YES_NO_OPTION);
                switch (odgovor) {
                    case JOptionPane.YES_OPTION:
                      JOptionPane.showMessageDialog(this, "Erfolgreich", "Erfolgreich", JOptionPane.ERROR_MESSAGE);
                       Korisnik k=new Korisnik(5656, emailKorisnika, password, ime, prezime, broj, pol);
                     Controller.getInstance().ubaciKorisnika(k);
                    this.dispose();
                        break;
                    case JOptionPane.NO_OPTION:
                        break;
                }
            }
                
            }
       
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBoxCond;
    private javax.swing.JComboBox<String> jComboBoxGender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelEmail;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelPassword;
    private javax.swing.JLabel jLabelSurname;
    private javax.swing.JLabel jLabelpol;
    private javax.swing.JTextField jTxtRegName;
    private javax.swing.JTextField jTxtRegNumber;
    private javax.swing.JPasswordField jTxtRegPassword;
    private javax.swing.JPasswordField jTxtRegPassword1;
    private javax.swing.JTextField jTxtRegSurname;
    // End of variables declaration//GEN-END:variables
 private boolean proveripolja() {
        String ime=jTxtRegName.getText();
        String prezime=jTxtRegSurname.getText();
        String broj=jTxtRegNumber.getText();
        String pass=String.valueOf(jTxtRegPassword.getPassword());
        String pass2=String.valueOf(jTxtRegPassword1.getPassword());
        String pol=(String) jComboBoxGender.getSelectedItem();
        if(ime.trim().isEmpty() || prezime.trim().isEmpty() || broj.trim().isEmpty() || pol==null || pass.trim().isEmpty() || pass2.trim().isEmpty()){
            return false;
        }
        
        return true;
    }
    private void validiranje(ArrayList<JTextField> textFields) {  
        Border redBorder = BorderFactory.createLineBorder(Color.RED, 2);

        for (JTextField textField : textFields) {
            if (textField.getText().trim().isEmpty()) {
                textField.setBorder(redBorder); 
                textField.setBackground(new Color(254,129, 129));
            } else {
                textField.setBorder(UIManager.getBorder("TextField.border")); 
                textField.setBackground(Color.WHITE);
            }
        }
    }

    private boolean validacijaPodataka() {
         String ime=jTxtRegName.getText();
        String prezime=jTxtRegSurname.getText();
        String broj=jTxtRegNumber.getText();
       
        String pass=String.valueOf(jTxtRegPassword.getPassword());
        String pass2=String.valueOf(jTxtRegPassword1.getPassword());
        
        if(!ime.matches("[a-zA-Z]+") || !prezime.matches("[a-zA-Z]+")){
            return false;
        }else if(ime.length()<2 || prezime.length()<2 || broj.length()<6 || pass.length()<4 || pass2.length()<4){
            return false;
        }else{
            return true;
        }
        
        
    }

    private void loadLanguage() {
        try {
            messages = ResourceBundle.getBundle("prevod.messages", currentLocale);
        } catch (Exception e) {
            System.err.println("Greska" + e.getMessage());
        }
    }

    private void updateTexts() {
        jButton1.setText(messages.getString("zavrsiReg.text"));
        jCheckBox1.setText(messages.getString("jButtonPrikaziLozinku.text"));
        jCheckBox2.setText(messages.getString("jButtonPrikaziLozinku.text"));
        
        jCheckBoxCond.setText(messages.getString("jCheckBoxCond.text"));
        
        jLabel1.setText(messages.getString("jLabelReg.text"));
        jLabelName.setText(messages.getString("jLabelName.text"));
        jLabelSurname.setText(messages.getString("jLabelSurname.text"));
         jLabelPassword.setText(messages.getString("jLabelPassword.text"));
        jLabel5.setText(messages.getString("jLabelPassword2.text"));
        jLabel4.setText(messages.getString("brojTelefona.text"));
        jLabelpol.setText(messages.getString("jLabelPol.text"));
    }
    
        private void addListeners1() {jCheckBox1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                showPassword();
            }

            private void showPassword() {
                if (jCheckBox1.isSelected()) {
                    String password = new String(jTxtRegPassword1.getPassword());
                    jTxtRegPassword1.setText(password);
                    jTxtRegPassword1.setEchoChar((char) 0);

                } else {
                    jTxtRegPassword1.setEchoChar('\u2022');
                }
            }
        });
    }
            private void addListeners2() {jCheckBox2.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                showPassword();
            }

            private void showPassword() {
                if (jCheckBox2.isSelected()) {
                    String password = new String(jTxtRegPassword.getPassword());
                    jTxtRegPassword.setText(password);
                    jTxtRegPassword.setEchoChar((char) 0);

                } else {
                    jTxtRegPassword.setEchoChar('\u2022');
                }
            }
        });
    }
}
